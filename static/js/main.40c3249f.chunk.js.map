{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","cardsData","dataFromJson","heatmapFromJson","dataFromJson2","heatmapFromJson2","plotsData","plotLayout","heatMapData","heatMapLayout","heatMapConfig","categoryToday","city","dateUpdated","lastChangeDate","selectedType","Tabletop","init","key","callback","googleData","console","log","setState","simpleSheet","this","getData","a","axios","get","then","response","data","allCities","conservative","Object","keys","aggressive","pop","setData","allData","plotData","type","mode","value","length","number","suffix","font","size","align","domain","x","y","title","text","gauge","shape","axis","range","threshold","line","color","width","thickness","steps","bar","heatMapArray","mapData","z","map","item","replace","slice","colorscale","showscale","category","date","changeArr","lastChangedValue","index","reverse","findIndex","i","dateArr","changeDate","height","margin","t","r","l","b","responsive","policies","selectedCategory","toLowerCase","charAt","toUpperCase","medicalPreparedness","filter","p","Domain","medicalPreparednessText","forEach","Policy","mobility","mobilityText","testing","testingText","closures","closuresText","contactTracing","contactTracingText","communication","communicationText","dataText","publicLeadership","publicLeadershipText","vaccinations","vaccinationsText","gatherings","gatheringsText","maskVentilation","maskVentilationText","distancing","distancingText","className","style","backgroundColor","Dropdown","Toggle","variant","id","Menu","Item","onSelect","selectCity","Button","onClick","switchApproach","layout","fontWeight","textAlign","config","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c3249f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport readXlsxFile from 'read-excel-file';\r\nimport Tabletop from 'tabletop';\r\nimport axios from 'axios';\r\nimport Plot from \"react-plotly.js\";\r\nimport {Dropdown, Button} from 'react-bootstrap';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardsData: [],\r\n            dataFromJson: {},\r\n            heatmapFromJson: {},\r\n            dataFromJson2: {},\r\n            heatmapFromJson2: {},\r\n            plotsData: [],\r\n            plotLayout: [],\r\n            heatMapData: [],\r\n            heatMapLayout: [],\r\n            heatMapConfig: [],\r\n            categoryToday: \"\",\r\n            city: \"\",\r\n            dateUpdated: \"\",\r\n            lastChangeDate: \"\",\r\n            selectedType: \"aggressive\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Tabletop.init({\r\n              key: '1-VF4_JFPZ5-mZGqdx0y0X_9CIc6WY-RMzeQjvxXNvZE',\r\n              callback: googleData => {\r\n                console.log('google sheet data --->', googleData)\r\n                this.setState({cardsData: googleData});\r\n              },\r\n              simpleSheet: true\r\n            })\r\n        this.getData();\r\n    }\r\n\r\n    async getData() {\r\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/actual.json')\r\n            .then(response => {\r\n        \t    this.setState({ dataFromJson: response.data });\r\n        \t});\r\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/demo.json')\r\n            .then(response => {\r\n                this.setState({ heatmapFromJson: response.data });\r\n            });\r\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/agg_actual.json')\r\n            .then(response => {\r\n                this.setState({ dataFromJson2: response.data });\r\n            });\r\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/agg_demo.json')\r\n           .then(response => {\r\n               this.setState({ heatmapFromJson2: response.data });\r\n           });\r\n        let allCities = [];\r\n        const conservative = this.state.dataFromJson && Object.keys(this.state.dataFromJson);\r\n        const aggressive = this.state.dataFromJson2 && Object.keys(this.state.dataFromJson2);\r\n        allCities = this.state.selectedType === \"conservative\" ? conservative : aggressive;\r\n        allCities.pop();\r\n        this.setState({city: allCities[0]});\r\n        this.setData(allCities[0]);\r\n    }\r\n\r\n    setData(city) {\r\n        const allData = this.state.selectedType === \"conservative\" ? this.state.dataFromJson : this.state.dataFromJson2;\r\n        const heatMapData = this.state.selectedType === \"conservative\" ? this.state.heatmapFromJson : this.state.heatmapFromJson2;\r\n        if(allData) {\r\n            const plotData = [\r\n              {\r\n                type: \"indicator\",\r\n                mode: \"number+gauge\",\r\n                value: allData[city][\"pct_ICU\"][allData[city][\"pct_ICU\"].length -1],     //input from json \"icuvacancy\"\r\n                //delta: { reference: 200 }, //removed as not using delta\r\n                number: { suffix: \"%\", font: {size: 20}},\r\n                align: \"right\",\r\n                domain: { x: [0.5, 1], y: [0.05, 0.15] },\r\n                title: { text: \"ICU Vacancy (%)  \", font: {size: 20} },\r\n                gauge: {\r\n                  shape: \"bullet\",\r\n                  axis: { range: [null, 100] },\r\n                  threshold: {\r\n                    line: { color: \"3d3d5c\", width: 2 },\r\n                    thickness: 0.75,\r\n                    value: allData[city][\"pct_ICU\"][allData[city][\"pct_ICU\"].length - 14]//30 //input from json \"icuvacancy\" from -14 days\r\n                  },\r\n                  steps: [\r\n                    { range: [0, 40], color: \"ff4d4d\" },\r\n                    { range: [40, 80], color: \"FFBF00\" },\r\n                    { range: [80, 100], color: \"238823\" }\r\n                  ],\r\n                  bar: { color: \"1f1f2e\" }\r\n                }\r\n              },\r\n                {\r\n                type: \"indicator\",\r\n                mode: \"number+gauge\",\r\n                value: allData[city][\"daily_tests_per_million_14ma\"][allData[city][\"daily_tests_per_million_14ma\"].length -1],     //input from json \"dailytestpermillion\"\r\n                //delta: { reference: 200 }, //removed as not using delta\r\n                number: { font: {size: 20}},\r\n                align: \"right\",\r\n                domain: { x: [0.5, 1], y: [0.22, 0.32] },\r\n                title: { text: \"Tests Per Million  \", font: {size: 20} },\r\n                gauge: {\r\n                  shape: \"bullet\",\r\n                  axis: { range: [null, 5000] },\r\n                  threshold: {\r\n                    line: { color: \"3d3d5c\", width: 2 },\r\n                    thickness: 0.75,\r\n                    value: allData[city][\"daily_tests_per_million_14ma\"][allData[city][\"daily_tests_per_million_14ma\"].length -14], //input from json \"dailytestpermillion\" from -14 days\r\n                  },\r\n                  steps: [\r\n                    { range: [0,140], color: \"ff4d4d\" },\r\n                    { range: [140, 5000], color: \"238823\" }\r\n                  ],\r\n                  bar: { color: \"1f1f2e\" }\r\n                }\r\n              },\r\n                {\r\n                type: \"indicator\",\r\n                mode: \"number+gauge\",\r\n                value: allData[city][\"TPR\"][allData[city][\"TPR\"].length -1],     //input from json \"dailytestpositivityrate\"\r\n                //delta: { reference: 200 }, //removed as not using delta\r\n                number: { suffix: \"%\", font: {size: 20}},\r\n                align: \"right\",\r\n                domain: { x: [0.5, 1], y: [0.39, 0.49] },\r\n                title: { text: \"Tests Positivity (%)  \", font: {size: 20} },\r\n                gauge: {\r\n                  shape: \"bullet\",\r\n                  axis: { range: [null, 100] },\r\n                  threshold: {\r\n                    line: { color: \"3d3d5c\", width: 2 },\r\n                    thickness: 0.75,\r\n                    value: allData[city][\"TPR\"][allData[city][\"TPR\"].length -14],  //input from json \"dailytestpositivityrate\" from -14 days\r\n                  },\r\n                  steps: [\r\n                    { range: [0, 5], color: \"238823\" },\r\n                    { range: [5, 10], color: \"FFBF00\" },\r\n                    { range: [10, 100], color: \"ff4d4d\" }\r\n                  ],\r\n                  bar: { color: \"1f1f2e\" }\r\n                }\r\n              },\r\n                {\r\n                type: \"indicator\",\r\n                mode: \"number+gauge\",\r\n                value: allData[city][\"rate_increase_new_cases\"][allData[city][\"rate_increase_new_cases\"].length -1] ,     //input from json \"casegrowthrate\"\r\n                //delta: { reference: 200 }, //removed as not using delta\r\n                number: { suffix: \"%\", font: {size: 20}},\r\n                align: \"right\",\r\n                domain: { x: [0.5, 1], y: [0.56, 0.66] },\r\n                title: { text: \"Case Growth Rate (%)  \", font: {size: 20} },\r\n                gauge: {\r\n                  shape: \"bullet\",\r\n                  axis: { range: [-50, 100] },\r\n                  threshold: {\r\n                    line: { color: \"3d3d5c\", width: 2 },\r\n                    thickness: 0.75,\r\n                    value: allData[city][\"rate_increase_new_cases\"][allData[city][\"rate_increase_new_cases\"].length -14] //input from json \"casegrowthrate\" from -14 days\r\n                  },\r\n                  steps: [\r\n                    { range: [-50, 2], color: \"238823\" },\r\n                    { range: [2, 5], color: \"FFBF00\" },\r\n                    { range: [5, 100], color: \"ff4d4d\" }\r\n                  ],\r\n                  bar: { color: \"1f1f2e\" }\r\n                }\r\n              },\r\n                {\r\n                type: \"indicator\",\r\n                mode: \"number+gauge\",\r\n                value: allData[city][\"daily_cases_per_million\"][allData[city][\"daily_cases_per_million\"].length -1],     //input from json \"dailycasespermillion\"\r\n                //delta: { reference: 200 }, //removed as not using delta\r\n                number: { font: {size: 20}},\r\n                align: \"right\",\r\n                domain: { x: [0.5, 1], y: [0.73, 0.83] },\r\n                title: { text: \"Cases Per Million  \", font: {size: 20} },\r\n                gauge: {\r\n                  shape: \"bullet\",\r\n                  axis: {\r\n                    range: [null, 2000]      },\r\n                  threshold: {\r\n                    line: { color: \"3d3d5c\", width: 2 },\r\n                    thickness: 0.75,\r\n                    value: allData[city][\"daily_cases_per_million\"][allData[city][\"daily_cases_per_million\"].length -14] //input from json \"dailycasespermillion\" from -14 days\r\n                  },\r\n                  steps: [\r\n                    { range: [0, 20], color: \"238823\" },\r\n                    { range: [20, 100], color: \"FFBF00\" },\r\n                    { range: [100, 2000], color: \"ff4d4d\" }\r\n                  ],\r\n                  bar: { color: \"1f1f2e\" }\r\n                }\r\n              }\r\n            ];\r\n            const plotsLayout = {\r\n              width: 750, height: 500,\r\n              margin: { t: 10, r: 25, l: 25, b: 10 }\r\n            };\r\n\r\n\r\n            let heatMapArray = heatMapData[city][\"category\"];\r\n            heatMapArray = heatMapArray.map((item) => {\r\n                return item.replace(\"GRAY\", 3);\r\n            });\r\n            heatMapArray = heatMapArray.map((item) => {\r\n                return item.replace(\"YELLOW\", 2);\r\n            });\r\n            heatMapArray = heatMapArray.map((item) => {\r\n                return item.replace(\"GREEN\", 1);\r\n            });\r\n            heatMapArray = heatMapArray.map((item) => {\r\n                return item.replace(\"RED\", 0);\r\n            });\r\n            const colorscaleValue = [\r\n              [0, 'rgb(255, 77, 77)'],\r\n              [0.33, 'rgb(255, 77, 77)'],\r\n              [0.33, '#238823'],\r\n              [0.67, '#238823'],\r\n              [0.67, '#ffbf00'],\r\n              [1, '#ffbf00']\r\n            ];\r\n            const mapData = [\r\n              {\r\n                z: [heatMapArray.slice(heatMapArray.length - 90)],\r\n                colorscale: colorscaleValue,\r\n                type: 'heatmap',\r\n                showscale: false,\r\n                 y:[\" \"]\r\n              }\r\n            ];\r\n            const heatmapLayout = {\r\n              width: 500, height: 50,\r\n              margin: { t: 10, r: 25, l: 25, b: 10 }\r\n            };\r\n            const config = {responsive: true}\r\n\r\n            const category = allData[city][\"category\"][allData[city][\"category\"].length - 1];\r\n\r\n            const date = allData[city][\"dates\"][allData[city][\"dates\"].length - 1];\r\n\r\n\r\n            const changeArr = heatMapData[city][\"is_change\"];\r\n            const lastChangedValue = changeArr[changeArr.length - 1];\r\n            const changeArrReverse = changeArr.reverse();\r\n            const index = changeArrReverse.findIndex((i) =>\r\n                i !== lastChangedValue\r\n            )\r\n            changeArr.reverse();\r\n            const dateArr = heatMapData[city][\"dates\"];\r\n            const dateArrReverse = dateArr.reverse();\r\n            const changeDate = dateArrReverse[index];\r\n            dateArr.reverse();\r\n\r\n\r\n\r\n            this.setState({plotsData: plotData, plotLayout: plotsLayout,\r\n            heatMapData: mapData, heatMapLayout: heatmapLayout, heatMapConfig: config,\r\n            categoryToday: category, dateUpdated: date, lastChangeDate: changeDate});\r\n        }\r\n    }\r\n\r\n    selectCity(key) {\r\n        this.setState({city: key});\r\n        this.setData(key);\r\n    }\r\n\r\n    switchApproach() {\r\n        this.setState({selectedType: this.state.selectedType === \"conservative\" ? \"aggressive\" : \"conservative\"}, () => {this.setData(this.state.city)});\r\n    }\r\n\r\n    render() {\r\n        const policies = this.state.cardsData;\r\n        let selectedCategory = this.state.categoryToday && this.state.categoryToday.toLowerCase().charAt(0).toUpperCase() + this.state.categoryToday.toLowerCase().slice(1);\r\n        const medicalPreparedness = policies.filter((p) => p.Domain === \"Medical Preparedness\");\r\n        let medicalPreparednessText = \"\";\r\n        medicalPreparedness.forEach((i) => {\r\n            if(i[selectedCategory] === \"1\") {\r\n                medicalPreparednessText += \"- \";\r\n                medicalPreparednessText += i.Policy;\r\n                medicalPreparednessText += \"\\n\";\r\n            }\r\n        })\r\n        console.log(medicalPreparednessText);\r\n        const mobility = policies.filter((p) => p.Domain === \"Mobility\");\r\n        let mobilityText = \"\";\r\n        mobility.forEach((i) => {\r\n            if(i[selectedCategory] === \"1\") {\r\n                mobilityText += \"- \";\r\n                mobilityText += i.Policy;\r\n                mobilityText += \"\\n\";\r\n            }\r\n        })\r\n        const testing = policies.filter((p) => p.Domain === \"Testing\");\r\n        let testingText = \"\";\r\n                testing.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        testingText += \"- \";\r\n                        testingText += i.Policy;\r\n                        testingText += \"\\n\";\r\n                    }\r\n                })\r\n        const closures = policies.filter((p) => p.Domain === \"Closures\");\r\n        let closuresText = \"\";\r\n                closures.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        closuresText += \"- \";\r\n                        closuresText += i.Policy;\r\n                        closuresText += \"\\n\";\r\n                    }\r\n                })\r\n        const contactTracing = policies.filter((p) => p.Domain === \"Contact Tracing\");\r\n        let contactTracingText = \"\";\r\n                contactTracing.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        contactTracingText += \"- \";\r\n                        contactTracingText += i.Policy;\r\n                        contactTracingText += \"\\n\";\r\n                    }\r\n                })\r\n        const communication = policies.filter((p) => p.Domain === \"Communication\");\r\n        let communicationText = \"\";\r\n                communication.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        communicationText += \"- \";\r\n                        communicationText += i.Policy;\r\n                        communicationText += \"\\n\";\r\n                    }\r\n                })\r\n        const data = policies.filter((p) => p.Domain === \"Data\");\r\n        let dataText = \"\";\r\n                data.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        dataText += \"- \";\r\n                        dataText += i.Policy;\r\n                        dataText += \"\\n\";\r\n                    }\r\n                })\r\n        const publicLeadership = policies.filter((p) => p.Domain === \"Public Leadership\");\r\n        let publicLeadershipText = \"\";\r\n                publicLeadership.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        publicLeadershipText += \"- \";\r\n                        publicLeadershipText += i.Policy;\r\n                        publicLeadershipText += \"\\n\";\r\n                    }\r\n                })\r\n        const vaccinations = policies.filter((p) => p.Domain === \"Vaccinations\");\r\n        let vaccinationsText = \"\";\r\n                vaccinations.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        vaccinationsText += \"- \";\r\n                        vaccinationsText += i.Policy;\r\n                        vaccinationsText += \"\\n\";\r\n                    }\r\n                })\r\n        const gatherings = policies.filter((p) => p.Domain === \"Gatherings\");\r\n        let gatheringsText = \"\";\r\n                gatherings.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        gatheringsText += \"- \";\r\n                        gatheringsText += i.Policy;\r\n                        gatheringsText += \"\\n\";\r\n                    }\r\n                })\r\n        const maskVentilation = policies.filter((p) => p.Domain === \"Mask Wearing and Ventilation\");\r\n        let maskVentilationText = \"\";\r\n                maskVentilation.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        maskVentilationText += \"- \";\r\n                        maskVentilationText += i.Policy;\r\n                        maskVentilationText += \"\\n\";\r\n                    }\r\n                })\r\n        const distancing = policies.filter((p) => p.Domain === \"Physical Distancing and Hygiene\");\r\n        let distancingText = \"\";\r\n                distancing.forEach((i) => {\r\n                    if(i[selectedCategory] === \"1\") {\r\n                        distancingText += \"- \";\r\n                        distancingText += i.Policy;\r\n                        distancingText += \"\\n\";\r\n                    }\r\n                })\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"heading jumbotron-fluid\" style={{backgroundColor: \"black\"}}>\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">{this.state.city}</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dropdown\">\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                    {this.state.city}\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onSelect={() => this.selectCity(\"Delhi\")}>Delhi</Dropdown.Item>\r\n                    <Dropdown.Item onSelect={() => this.selectCity(\"Chandigarh\")}>Chandigarh</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                </div>\r\n                <div className=\"date d-none d-lg-block\">on {this.state.dateUpdated} 2021</div>\r\n                <div className=\"switch\">\r\n                    <Button variant=\"secondary\" onClick={() => this.switchApproach()}>{\r\n                        this.state.selectedType === \"aggressive\" ? \"Switch to conservative\" : \"Switch to aggressive\"\r\n                    }</Button>\r\n                </div>\r\n                <div className=\"first\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 d-none d-lg-block\">\r\n                            <div id=\"metric\">\r\n                                <Plot data={this.state.plotsData}\r\n                                      layout={this.state.plotLayout} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-8\">\r\n                            <div className=\"left\">\r\n                                <div className=\"risk-card risk card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h2 className=\"lead font-weight-bold\">Today's Risk Score</h2>\r\n                                    </div>\r\n                                    <div className=\"risk card-body\" style={{backgroundColor:\r\n                                        this.state.categoryToday === \"RED\" ? \"rgb(255, 77, 77)\" :\r\n                                        this.state.categoryToday === \"GREEN\" ? \"#238823\" :\r\n                                        this.state.categoryToday === \"YELLOW\" ? \"#ffbf00\" : \"#eaeaec\", fontWeight: \"bold\", textAlign: \"center\"}}>\r\n                                        <span className=\"risk-text\">{this.state.categoryToday === \"RED\" ? \"HIGH RISK\" :\r\n                                        this.state.categoryToday === \"GREEN\" ? \"LOW RISK\" :\r\n                                        this.state.categoryToday === \"YELLOW\" ? \"MEDIUM RISK\" : \"INSUFFICIENT DATA TO CATEGORIZE\"}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-none d-lg-block last-changed-date\">Risk score last changed on {this.state.lastChangeDate}</div>\r\n                                <div id = \"status\">\r\n                                    <Plot data={this.state.heatMapData}\r\n                                          layout={this.state.heatMapLayout}\r\n                                          config={this.state.heatMapConfig} />\r\n                                </div>\r\n                                <div className=\"d-none d-lg-block last-changed-text\">Status of last 90 days</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"second\">\r\n                    <h2 className = \"display-4 text-center\">Suggested Policy Actions</h2><br/>\r\n                        <div className = \"row\">\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#d8e2dc\"}}>\r\n                                        <p className = \"lead\">Gatherings</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {gatheringsText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#d8e2dc\"}}>\r\n                                        <p className = \"lead\">Closures</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {closuresText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#d8e2dc\"}}>\r\n                                        <p className = \"lead\">Travel</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {mobilityText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\r\n                                        <p className = \"lead\">Medical Preparedness</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {medicalPreparednessText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\r\n                                        <p className = \"lead\">Testing</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {testingText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\r\n                                        <p className = \"lead\">Vaccination</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {vaccinationsText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\r\n                                        <p className = \"lead\">Contact Tracing</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {contactTracingText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\r\n                                        <p className = \"lead\">Communication </p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {communicationText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\r\n                                        <p className = \"lead\">Data</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {dataText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\r\n                                        <p className = \"lead\">Public Leadership</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {publicLeadershipText}\r\n                                    </div>\r\n                                </div>  \r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\r\n                                        <p className = \"lead\">Mask Wearing and Ventilation</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {maskVentilationText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"col-md-4\">\r\n                                <div className = \"action card\">\r\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\r\n                                        <p className = \"lead\">Physical Distancing and Hygiene</p>\r\n                                    </div>\r\n                                    <div className = \"card-body\">\r\n                                        {distancingText}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}