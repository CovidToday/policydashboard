{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","cardsData","dataFromJson","heatmapFromJson","dataFromJson2","heatmapFromJson2","plotsData","plotLayout","heatMapData","heatMapLayout","heatMapConfig","categoryToday","city","dateUpdated","lastChangeDate","selectedType","this","getData","a","axios","get","then","response","setState","data","allCities","conservative","Object","keys","aggressive","pop","setData","allData","plotData","type","mode","value","length","number","suffix","font","size","align","domain","x","y","title","text","gauge","shape","axis","range","threshold","line","color","width","thickness","steps","bar","heatMapArray","mapData","z","map","item","replace","slice","colorscale","showscale","category","date","changeArr","lastChangedValue","index","reverse","findIndex","i","dateArr","changeDate","height","margin","t","r","l","b","responsive","key","console","log","policies","selectedCategory","toLowerCase","charAt","toUpperCase","medicalPreparedness","filter","p","Domain","medicalPreparednessText","forEach","Policy","mobility","mobilityText","testing","testingText","closures","closuresText","contactTracing","contactTracingText","communication","communicationText","dataText","publicLeadership","publicLeadershipText","vaccinations","vaccinationsText","gatherings","gatheringsText","maskVentilation","maskVentilationText","distancing","distancingText","className","style","backgroundColor","Dropdown","Toggle","variant","id","Menu","Item","onSelect","selectCity","Button","onClick","switchApproach","layout","fontWeight","textAlign","config","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.616fc15b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport readXlsxFile from 'read-excel-file';\nimport Tabletop from 'tabletop';\nimport axios from 'axios';\nimport Plot from \"react-plotly.js\";\nimport {Dropdown, Button} from 'react-bootstrap';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cardsData: [],\n            dataFromJson: {},\n            heatmapFromJson: {},\n            dataFromJson2: {},\n            heatmapFromJson2: {},\n            plotsData: [],\n            plotLayout: [],\n            heatMapData: [],\n            heatMapLayout: [],\n            heatMapConfig: [],\n            categoryToday: \"\",\n            city: \"\",\n            dateUpdated: \"\",\n            lastChangeDate: \"\",\n            selectedType: \"aggressive\"\n        }\n    }\n\n    componentDidMount() {\n        //Tabletop.init({\n              //key: '1-VF4_JFPZ5-mZGqdx0y0X_9CIc6WY-RMzeQjvxXNvZE',\n              //callback: googleData => {\n                //console.log('google sheet data --->', googleData)\n                //this.setState({cardsData: googleData});\n              //},\n              //simpleSheet: true\n            //})\n        this.getData();\n    }\n\n    async getData() {\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/Cat_wise_policies.json')\n            .then(response => {\n                //console.log(response.data)\n                this.setState({ cardsData: response.data });\n            });\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/actual.json')\n            .then(response => {\n        \t    this.setState({ dataFromJson: response.data });\n        \t});\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/demo.json')\n            .then(response => {\n                this.setState({ heatmapFromJson: response.data });\n            });\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/agg_actual.json')\n            .then(response => {\n                this.setState({ dataFromJson2: response.data });\n            });\n        await axios.get('https://raw.githubusercontent.com/aberrantdoc/policydashboard/master/district_data/agg_demo.json')\n           .then(response => {\n               this.setState({ heatmapFromJson2: response.data });\n           });\n        let allCities = [];\n        const conservative = this.state.dataFromJson && Object.keys(this.state.dataFromJson);\n        const aggressive = this.state.dataFromJson2 && Object.keys(this.state.dataFromJson2);\n        allCities = this.state.selectedType === \"conservative\" ? conservative : aggressive;\n        allCities.pop();\n        this.setState({city: allCities[0]});\n        this.setData(allCities[0]);\n    }\n\n    setData(city) {\n        //console.log(this.state)\n        const allData = this.state.selectedType === \"conservative\" ? this.state.dataFromJson : this.state.dataFromJson2;\n        const heatMapData = this.state.selectedType === \"conservative\" ? this.state.heatmapFromJson : this.state.heatmapFromJson2;\n        if(allData) {\n            const plotData = [\n              {\n                type: \"indicator\",\n                mode: \"number+gauge\",\n                value: allData[city][\"pct_ICU\"][allData[city][\"pct_ICU\"].length -1],     //input from json \"icuvacancy\"\n                //delta: { reference: 200 }, //removed as not using delta\n                number: { suffix: \"%\", font: {size: 20}},\n                align: \"right\",\n                domain: { x: [0.5, 1], y: [0.05, 0.15] },\n                title: { text: \"ICU Vacancy (%)  \", font: {size: 20} },\n                gauge: {\n                  shape: \"bullet\",\n                  axis: { range: [null, 100] },\n                  threshold: {\n                    line: { color: \"3d3d5c\", width: 2 },\n                    thickness: 0.75,\n                    value: allData[city][\"pct_ICU\"][allData[city][\"pct_ICU\"].length - 14]//30 //input from json \"icuvacancy\" from -14 days\n                  },\n                  steps: [\n                    { range: [0, 40], color: \"fc0f03\" },\n                    { range: [40, 80], color: \"e38109\" },\n                    { range: [80, 100], color: \"FFBF00\" }\n                  ],\n                  bar: { color: \"1f1f2e\" }\n                }\n              },\n                {\n                type: \"indicator\",\n                mode: \"number+gauge\",\n                value: allData[city][\"daily_tests_per_million_14ma\"][allData[city][\"daily_tests_per_million_14ma\"].length -1],     //input from json \"dailytestpermillion\"\n                //delta: { reference: 200 }, //removed as not using delta\n                number: { font: {size: 20}},\n                align: \"right\",\n                domain: { x: [0.5, 1], y: [0.22, 0.32] },\n                title: { text: \"Tests Per Million  \", font: {size: 20} },\n                gauge: {\n                  shape: \"bullet\",\n                  axis: { range: [null, 5000] },\n                  threshold: {\n                    line: { color: \"3d3d5c\", width: 2 },\n                    thickness: 0.75,\n                    value: allData[city][\"daily_tests_per_million_14ma\"][allData[city][\"daily_tests_per_million_14ma\"].length -14], //input from json \"dailytestpermillion\" from -14 days\n                  },\n                  steps: [\n                    { range: [0,140], color: \"fc0f03\" },\n                    { range: [140, 5000], color: \"FFBF00\" }\n                  ],\n                  bar: { color: \"1f1f2e\" }\n                }\n              },\n                {\n                type: \"indicator\",\n                mode: \"number+gauge\",\n                value: allData[city][\"TPR\"][allData[city][\"TPR\"].length -1],     //input from json \"dailytestpositivityrate\"\n                //delta: { reference: 200 }, //removed as not using delta\n                number: { suffix: \"%\", font: {size: 20}},\n                align: \"right\",\n                domain: { x: [0.5, 1], y: [0.39, 0.49] },\n                title: { text: \"Tests Positivity (%)  \", font: {size: 20} },\n                gauge: {\n                  shape: \"bullet\",\n                  axis: { range: [null, 100] },\n                  threshold: {\n                    line: { color: \"3d3d5c\", width: 2 },\n                    thickness: 0.75,\n                    value: allData[city][\"TPR\"][allData[city][\"TPR\"].length -14],  //input from json \"dailytestpositivityrate\" from -14 days\n                  },\n                  steps: [\n                    { range: [0, 5], color: \"FFBF00\" },\n                    { range: [5, 10], color: \"e38109\" },\n                    { range: [10, 100], color: \"fc0f03\" }\n                  ],\n                  bar: { color: \"1f1f2e\" }\n                }\n              },\n                {\n                type: \"indicator\",\n                mode: \"number+gauge\",\n                value: allData[city][\"rate_increase_new_cases\"][allData[city][\"rate_increase_new_cases\"].length -1] ,     //input from json \"casegrowthrate\"\n                //delta: { reference: 200 }, //removed as not using delta\n                number: { suffix: \"%\", font: {size: 20}},\n                align: \"right\",\n                domain: { x: [0.5, 1], y: [0.56, 0.66] },\n                title: { text: \"Case Growth Rate (%)  \", font: {size: 20} },\n                gauge: {\n                  shape: \"bullet\",\n                  axis: { range: [-50, 100] },\n                  threshold: {\n                    line: { color: \"3d3d5c\", width: 2 },\n                    thickness: 0.75,\n                    value: allData[city][\"rate_increase_new_cases\"][allData[city][\"rate_increase_new_cases\"].length -14] //input from json \"casegrowthrate\" from -14 days\n                  },\n                  steps: [\n                    { range: [-50, 2], color: \"FFBF00\" },\n                    { range: [2, 5], color: \"e38109\" },\n                    { range: [5, 100], color: \"fc0f03\" }\n                  ],\n                  bar: { color: \"1f1f2e\" }\n                }\n              },\n                {\n                type: \"indicator\",\n                mode: \"number+gauge\",\n                value: allData[city][\"daily_cases_per_million\"][allData[city][\"daily_cases_per_million\"].length -1],     //input from json \"dailycasespermillion\"\n                //delta: { reference: 200 }, //removed as not using delta\n                number: { font: {size: 20}},\n                align: \"right\",\n                domain: { x: [0.5, 1], y: [0.73, 0.83] },\n                title: { text: \"Cases Per Million  \", font: {size: 20} },\n                gauge: {\n                  shape: \"bullet\",\n                  axis: {\n                    range: [null, 2000]      },\n                  threshold: {\n                    line: { color: \"3d3d5c\", width: 2 },\n                    thickness: 0.75,\n                    value: allData[city][\"daily_cases_per_million\"][allData[city][\"daily_cases_per_million\"].length -14] //input from json \"dailycasespermillion\" from -14 days\n                  },\n                  steps: [\n                    { range: [0, 20], color: \"FFBF00\" },\n                    { range: [20, 100], color: \"e38109\" },\n                    { range: [100, 2000], color: \"fc0f03\" }\n                  ],\n                  bar: { color: \"1f1f2e\" }\n                }\n              }\n            ];\n            const plotsLayout = {\n              width: 750, height: 500,\n              margin: { t: 10, r: 25, l: 25, b: 10 }\n            };\n\n\n            let heatMapArray = heatMapData[city][\"category\"];\n            heatMapArray = heatMapArray.map((item) => {\n                return item.replace(\"GRAY\", 3);\n            });\n            heatMapArray = heatMapArray.map((item) => {\n                return item.replace(\"ORANGE\", 2);\n            });\n            heatMapArray = heatMapArray.map((item) => {\n                return item.replace(\"YELLOW\", 1);\n            });\n            heatMapArray = heatMapArray.map((item) => {\n                return item.replace(\"RED\", 0);\n            });\n            const colorscaleValue = [\n              [0, 'rgb(255, 77, 77)'],\n              [0.33, 'rgb(255, 77, 77)'],\n              [0.33, '#e38109'],\n              [0.67, '#e38109'],\n              [0.67, '#f2705c'],\n              [1, '#f2705c']\n            ];\n            const mapData = [\n              {\n                z: [heatMapArray.slice(heatMapArray.length - 90)],\n                colorscale: colorscaleValue,\n                type: 'heatmap',\n                showscale: false,\n                 y:[\" \"]\n              }\n            ];\n            const heatmapLayout = {\n              width: 500, height: 50,\n              margin: { t: 10, r: 25, l: 25, b: 10 }\n            };\n            const config = {responsive: true}\n\n            const category = allData[city][\"category\"][allData[city][\"category\"].length - 1];\n\n            const date = allData[city][\"dates\"][allData[city][\"dates\"].length - 1];\n\n\n            const changeArr = heatMapData[city][\"is_change\"];\n            const lastChangedValue = changeArr[changeArr.length - 1];\n            const changeArrReverse = changeArr.reverse();\n            const index = changeArrReverse.findIndex((i) =>\n                i !== lastChangedValue\n            )\n            changeArr.reverse();\n            const dateArr = heatMapData[city][\"dates\"];\n            const dateArrReverse = dateArr.reverse();\n            const changeDate = dateArrReverse[index];\n            dateArr.reverse();\n\n\n\n            this.setState({plotsData: plotData, plotLayout: plotsLayout,\n            heatMapData: mapData, heatMapLayout: heatmapLayout, heatMapConfig: config,\n            categoryToday: category, dateUpdated: date, lastChangeDate: changeDate});\n        }\n    }\n\n    selectCity(key) {\n        this.setState({city: key});\n        this.setData(key);\n    }\n\n    switchApproach() {\n        this.setState({selectedType: this.state.selectedType === \"conservative\" ? \"aggressive\" : \"conservative\"}, () => {this.setData(this.state.city)});\n    }\n\n    render() {\n        console.log(this.state.cardsData);\n        const policies = this.state.cardsData;\n        let selectedCategory = this.state.categoryToday && this.state.categoryToday.toLowerCase().charAt(0).toUpperCase() + this.state.categoryToday.toLowerCase().slice(1);\n        const medicalPreparedness = policies.filter((p) => p.Domain === \"Medical Preparedness\");\n        let medicalPreparednessText = \"\";\n        medicalPreparedness.forEach((i) => {\n            if(i[selectedCategory] === \"1\") {\n                medicalPreparednessText += \"- \";\n                medicalPreparednessText += i.Policy;\n                medicalPreparednessText += \"\\n\";\n            }\n        })\n        console.log(medicalPreparednessText);\n        const mobility = policies.filter((p) => p.Domain === \"Mobility\");\n        let mobilityText = \"\";\n        mobility.forEach((i) => {\n            if(i[selectedCategory] === \"1\") {\n                mobilityText += \"- \";\n                mobilityText += i.Policy;\n                mobilityText += \"\\n\";\n            }\n        })\n        const testing = policies.filter((p) => p.Domain === \"Testing\");\n        let testingText = \"\";\n                testing.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        testingText += \"- \";\n                        testingText += i.Policy;\n                        testingText += \"\\n\";\n                    }\n                })\n        const closures = policies.filter((p) => p.Domain === \"Closures\");\n        let closuresText = \"\";\n                closures.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        closuresText += \"- \";\n                        closuresText += i.Policy;\n                        closuresText += \"\\n\";\n                    }\n                })\n        const contactTracing = policies.filter((p) => p.Domain === \"Contact Tracing\");\n        let contactTracingText = \"\";\n                contactTracing.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        contactTracingText += \"- \";\n                        contactTracingText += i.Policy;\n                        contactTracingText += \"\\n\";\n                    }\n                })\n        const communication = policies.filter((p) => p.Domain === \"Communication\");\n        let communicationText = \"\";\n                communication.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        communicationText += \"- \";\n                        communicationText += i.Policy;\n                        communicationText += \"\\n\";\n                    }\n                })\n        const data = policies.filter((p) => p.Domain === \"Data\");\n        let dataText = \"\";\n                data.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        dataText += \"- \";\n                        dataText += i.Policy;\n                        dataText += \"\\n\";\n                    }\n                })\n        const publicLeadership = policies.filter((p) => p.Domain === \"Public Leadership\");\n        let publicLeadershipText = \"\";\n                publicLeadership.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        publicLeadershipText += \"- \";\n                        publicLeadershipText += i.Policy;\n                        publicLeadershipText += \"\\n\";\n                    }\n                })\n        const vaccinations = policies.filter((p) => p.Domain === \"Vaccinations\");\n        let vaccinationsText = \"\";\n                vaccinations.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        vaccinationsText += \"- \";\n                        vaccinationsText += i.Policy;\n                        vaccinationsText += \"\\n\";\n                    }\n                })\n        const gatherings = policies.filter((p) => p.Domain === \"Gatherings\");\n        let gatheringsText = \"\";\n                gatherings.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        gatheringsText += \"- \";\n                        gatheringsText += i.Policy;\n                        gatheringsText += \"\\n\";\n                    }\n                })\n        const maskVentilation = policies.filter((p) => p.Domain === \"Mask Wearing and Ventilation\");\n        let maskVentilationText = \"\";\n                maskVentilation.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        maskVentilationText += \"- \";\n                        maskVentilationText += i.Policy;\n                        maskVentilationText += \"\\n\";\n                    }\n                })\n        const distancing = policies.filter((p) => p.Domain === \"Physical Distancing and Hygiene\");\n        let distancingText = \"\";\n                distancing.forEach((i) => {\n                    if(i[selectedCategory] === \"1\") {\n                        distancingText += \"- \";\n                        distancingText += i.Policy;\n                        distancingText += \"\\n\";\n                    }\n                })\n\n        return (\n            <div className=\"App\">\n                <div className=\"heading jumbotron-fluid\" style={{backgroundColor: \"black\"}}>\n                    <div className=\"container\">\n                        <h1 className=\"display-4\">{this.state.city}</h1>\n                    </div>\n                </div>\n                <div className=\"dropdown\">\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                    {this.state.city}\n                  </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n\n<Dropdown.Item onSelect={() => this.selectCity(\"East Godavari\")}>East Godavari</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Kolhapur\")}>Kolhapur</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Raipur\")}>Raipur</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Srikakulam\")}>Srikakulam</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Mysuru\")}>Mysuru</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Varanasi\")}>Varanasi</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Chittoor\")}>Chittoor</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Tumakuru\")}>Tumakuru</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Nagpur\")}>Nagpur</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Nanded\")}>Nanded</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Vellore\")}>Vellore</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Sangli\")}>Sangli</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Chitradurga\")}>Chitradurga</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Ballari\")}>Ballari</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Bareilly\")}>Bareilly</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Nashik\")}>Nashik</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Thane\")}>Thane</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Visakhapatnam\")}>Visakhapatnam</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Vadodara\")}>Vadodara</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Rajkot\")}>Rajkot</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Tiruvannamalai\")}>Tiruvannamalai</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Aligarh\")}>Aligarh</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Ghaziabad\")}>Ghaziabad</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Vizianagaram\")}>Vizianagaram</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Prakasam\")}>Prakasam</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Lucknow\")}>Lucknow</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Pune\")}>Pune</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Jaipur\")}>Jaipur</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Jalgaon\")}>Jalgaon</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Ahmedabad\")}>Ahmedabad</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Satara\")}>Satara</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Belagavi\")}>Belagavi</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Madurai\")}>Madurai</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Guntur\")}>Guntur</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Kancheepuram\")}>Kancheepuram</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Solapur\")}>Solapur</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Kurnool\")}>Kurnool</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Surat\")}>Surat</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Coimbatore\")}>Coimbatore</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Palghar\")}>Palghar</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"West Godavari\")}>West Godavari</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Kanpur Nagar\")}>Kanpur Nagar</Dropdown.Item>\n<Dropdown.Item onSelect={() => this.selectCity(\"Chennai\")}>Chennai</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                </div>\n                <div className=\"date d-none d-lg-block\">on {this.state.dateUpdated} 2021</div>\n                <div className=\"switch\">\n                    <Button variant=\"secondary\" onClick={() => this.switchApproach()}>{\n                        this.state.selectedType === \"aggressive\" ? \"Switch to conservative\" : \"Switch to aggressive\"\n                    }</Button>\n                </div>\n                <div className=\"first\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 d-none d-lg-block\">\n                            <div id=\"metric\">\n                                <Plot data={this.state.plotsData}\n                                      layout={this.state.plotLayout} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 col-sm-8\">\n                            <div className=\"left\">\n                                <div className=\"risk-card risk card\">\n                                    <div className=\"card-header\">\n                                        <h2 className=\"lead font-weight-bold\">Today's Risk Score</h2>\n                                    </div>\n                                    <div className=\"risk card-body\" style={{backgroundColor:\n                                        this.state.categoryToday === \"RED\" ? \"rgb(255, 77, 77)\" :\n                                        this.state.categoryToday === \"YELLOW\" ? \"#ffbf00\" :\n                                        this.state.categoryToday === \"ORANGE\" ? \"#f2705c\" : \"#eaeaec\", fontWeight: \"bold\", textAlign: \"center\"}}>\n                                        <span className=\"risk-text\">{this.state.categoryToday === \"RED\" ? \"HIGH RISK\" :\n                                        this.state.categoryToday === \"YELLOW\" ? \"LOW RISK\" :\n                                        this.state.categoryToday === \"ORANGE\" ? \"MEDIUM RISK\" : \"INSUFFICIENT DATA TO CATEGORIZE\"}</span>\n                                    </div>\n                                </div>\n                                <div className=\"d-none d-lg-block last-changed-date\">Risk score last changed on {this.state.lastChangeDate}</div>\n                                <div id = \"status\">\n                                    <Plot data={this.state.heatMapData}\n                                          layout={this.state.heatMapLayout}\n                                          config={this.state.heatMapConfig} />\n                                </div>\n                                <div className=\"d-none d-lg-block last-changed-text\">Status of last 90 days</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className = \"second\">\n                    <h2 className = \"display-4 text-center\">Suggested Policy Actions</h2><br/>\n                        <div className = \"row\">\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#d8e2dc\"}}>\n                                        <p className = \"lead\">Gatherings</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {gatheringsText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#d8e2dc\"}}>\n                                        <p className = \"lead\">Closures</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {closuresText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#d8e2dc\"}}>\n                                        <p className = \"lead\">Travel</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {mobilityText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\n                                        <p className = \"lead\">Medical Preparedness</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {medicalPreparednessText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\n                                        <p className = \"lead\">Testing</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {testingText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\n                                        <p className = \"lead\">Vaccination</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {vaccinationsText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#fcd5ce\"}}>\n                                        <p className = \"lead\">Contact Tracing</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {contactTracingText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\n                                        <p className = \"lead\">Communication </p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {communicationText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\n                                        <p className = \"lead\">Data</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {dataText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\n                                        <p className = \"lead\">Public Leadership</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {publicLeadershipText}\n                                    </div>\n                                </div>  \n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\n                                        <p className = \"lead\">Mask Wearing and Ventilation</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {maskVentilationText}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className = \"col-md-4\">\n                                <div className = \"action card\">\n                                    <div className = \"card-header\" style={{backgroundColor: \"#ffd7ba\"}}>\n                                        <p className = \"lead\">Physical Distancing and Hygiene</p>\n                                    </div>\n                                    <div className = \"card-body\">\n                                        {distancingText}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}